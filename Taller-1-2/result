eclare -x HOME="/homeless-shelter"
declare -x NIX_BUILD_CORES="1"
declare -x NIX_BUILD_TOP="/tmp/nix-build-nix-shell.drv-0"
declare -x NIX_LOG_FD="2"
declare -x NIX_STORE="/nix/store"
declare -x OLDPWD
declare -x PATH="/path-not-set"
declare -x PWD="/tmp/nix-build-nix-shell.drv-0"
declare -x SHLVL="1"
declare -x TEMP="/tmp/nix-build-nix-shell.drv-0"
declare -x TEMPDIR="/tmp/nix-build-nix-shell.drv-0"
declare -x TERM="xterm-256color"
declare -x TMP="/tmp/nix-build-nix-shell.drv-0"
declare -x TMPDIR="/tmp/nix-build-nix-shell.drv-0"
declare -x _derivation_original_args="-e /nix/store/9krlzvny65gdc8s7kpb6lkx8cd02c25b-default-builder.sh"
declare -x _derivation_original_builder="/nix/store/dsd5gz46hdbdk2rfdimqddhq6m8m8fqs-bash-5.1-p16/bin/bash"
declare -x buildInputs="/nix/store/yr1jhr7ry4vmbbffy9cljycmnymqpcm5-clang-wrapper-12.0.1 /nix/store/l2nfqy8hhq86lg8gd6x6sl46vi5mz8c8-ccls-0.20220729 /nix/store/ghvw9lxj8wy3qjip2jv6qsqwvqh6r86j-gdb-12.1 /nix/store/fa9hbv1fmbc1myna9jj49l0gln2b17dw-gnumake-4.3"
declare -x buildPhase="echo \"------------------------------------------------------------\" >>\$out
echo \" WARNING: the existence of this path is not guaranteed.\" >>\$out
echo \" It is an internal implementation detail for pkgs.mkShell.\"   >>\$out
echo \"------------------------------------------------------------\" >>\$out
echo >> \$out
# Record all build inputs as runtime dependencies
export >> \$out
"
declare -x builder="/nix/store/dsd5gz46hdbdk2rfdimqddhq6m8m8fqs-bash-5.1-p16/bin/bash"
declare -x cmakeFlags=""
declare -x configureFlags=""
declare -x depsBuildBuild=""
declare -x depsBuildBuildPropagated=""
declare -x depsBuildTarget=""
declare -x depsBuildTargetPropagated=""
declare -x depsHostHost=""
declare -x depsHostHostPropagated=""
declare -x depsTargetTarget=""
declare -x depsTargetTargetPropagated=""
declare -x doCheck=""
declare -x doInstallCheck=""
declare -x mesonFlags=""
declare -x name="nix-shell"
declare -x nativeBuildInputs=""
declare -x out="/nix/store/9rw6m39c26hl9g38c1ad3q8y307mkwzz-nix-shell"
declare -x outputs="out"
declare -x patches=""
declare -x phases="buildPhase"
declare -x propagatedBuildInputs=""
declare -x propagatedNativeBuildInputs=""
declare -x shellHook=""
declare -x stdenv="/nix/store/kmfaajdpyyyg319vfqni5jm9wkxjmf73-stdenv-linux"
declare -x strictDeps=""
declare -x system="x86_64-linux"
